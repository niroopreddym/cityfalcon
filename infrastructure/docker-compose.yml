version: "3"
services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./migrations/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - cache:/data
  rabbitMQ:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
  prometheus:
    image: niroop/prom
    build: 
      context: ./prometheus
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    networks:
      - gateway
  graphana:
    image: grafana/grafana:latest
    container_name: graphana
    ports:
      - "3000:3000"
    networks:
      - gateway
    volumes:
      - grafana-storage:/var/lib/grafana
volumes:
  db-data:
    driver: local
  cache:
    driver: local
  grafana-storage:
    driver: local
  prometheus_data:
    driver: local
networks:
  gateway: {}
  

    